---
repos:
  - repo: local
    hooks:
      - id: npm-only
        name: Enforce NPM Usage
        entry: sh -c 'echo "❌ Found non-npm package manager files. Only npm is allowed as package manager. Please remove other package manager files and use npm instead." >&2 && exit 1'
        language: system
        pass_filenames: false
        files: ^(yarn\..*|\.yarn.*|pnpm.*|bun\..*|\.pnpm.*|shrinkwrap\..*)$
        stages: [pre-commit]

      - id: tsc
        name: TypeScript type check
        entry: npm run check
        language: node
        pass_filenames: false
        types_or: [javascript, jsx, ts, tsx, svelte]

      - id: lint
        name: ESLint and Svelte Check
        entry: npm run lint
        language: node
        pass_filenames: false
        types_or: [javascript, jsx, ts, tsx, svelte]
        exclude: ^\.vscode/(firefox\.prefs\.js|settings\.json)$

      - id: lint-fix
        name: ESLint Auto-fix
        entry: npm run lint:fix
        language: node
        pass_filenames: false
        types_or: [javascript, jsx, ts, tsx, svelte]
        exclude: ^\.vscode/(firefox\.prefs\.js|settings\.json)$

      - id: structure-check
        name: Route Structure Check
        entry: npm run check:structure
        language: node
        pass_filenames: false
        files: ^src/routes/.*\.svelte$

      - id: unit-tests
        name: Unit Tests
        entry: npm run test
        language: node
        pass_filenames: false
        types_or: [javascript, jsx, ts, tsx, svelte]

  - repo: https://github.com/fsfe/reuse-tool
    rev: v5.0.2
    hooks:
      - id: reuse
        name: REUSE Compliance Check
        description: Ensures REUSE compliance by checking licensing and copyright information
        entry: reuse
        args: [lint]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        name: Check for Large Files
        description: Prevents giant files from being committed
        args: ['--maxkb=500']
      - id: check-case-conflict
        name: Check for Case Conflicts
        description: Checks for files that would conflict in case-insensitive filesystems
      - id: check-merge-conflict
        name: Check for Merge Conflicts
        description: Checks for files containing merge conflict strings
      - id: check-json
        name: Check JSON Files
        description: Checks that all JSON files are valid
      - id: pretty-format-json
        name: Format JSON Files
        description: Checks that all JSON files are pretty formatted
        args: ['--autofix', '--indent=2', '--no-sort-keys', '--no-ensure-ascii']
        files: \.json$
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        description: Removes trailing whitespace at end of lines
      - id: end-of-file-fixer
        name: Fix End of Files
        description: Ensures files end with exactly one newline
      - id: check-toml
        name: TOML Validation
        description: Validates TOML files for syntax errors

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        name: Markdown Lint
        description: Checks markdown files for style and syntax
  - repo: https://github.com/tcort/markdown-link-check
    rev: v3.11.2
    hooks:
      - id: markdown-link-check
        name: Markdown Link Check
        description: Extracts links from markdown texts and checks whether each link is alive or dead
